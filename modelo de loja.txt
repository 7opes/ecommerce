// 1. Estrutura do projeto:
// Certifique-se de criar a seguinte estrutura de pastas e arquivos:
// loja-online/
// ├── front-end/
// │   ├── index.html
// │   ├── styles.css
// │   └── script.js
// ├── back-end/
// │   ├── server.js
// │   └── database.json
// └── package.json

// 2. Configurar o servidor Node.js:
// Abra o terminal no VSCode e navegue até a pasta "loja-online".
// Execute os seguintes comandos:
//    npm init -y
//    npm install express cors

// 3. Código do servidor (back-end/server.js):
const express = require('express');
const fs = require('fs');
const cors = require('cors');

const app = express();
const PORT = 3000;

app.use(express.json());
app.use(cors());

const produtos = JSON.parse(fs.readFileSync('back-end/database.json'));

// Rota para listar produtos
app.get('/produtos', (req, res) => {
    res.json(produtos);
});

// Rota para adicionar produto
app.post('/produtos', (req, res) => {
    const novoProduto = req.body;
    novoProduto.id = produtos.length + 1; // Adiciona um ID automaticamente
    produtos.push(novoProduto);
    fs.writeFileSync('back-end/database.json', JSON.stringify(produtos, null, 2));
    res.status(201).json(novoProduto);
});

app.listen(PORT, () => {
    console.log(`Servidor rodando em http://localhost:${PORT}`);
});

// 4. Banco de dados simulado (back-end/database.json):
// Crie o arquivo "database.json" com o seguinte conteúdo:
// [
//     {
//         "id": 1,
//         "nome": "Teclado Mecânico",
//         "preco": 250.00
//     },
//     {
//         "id": 2,
//         "nome": "Mouse Gamer",
//         "preco": 150.00
//     }
// ]

// 5. Front-end (interface):
// No arquivo front-end/index.html:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Loja Online</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <header>
        <h1>Loja Online</h1>
    </header>
    <main>
        <div id="product-list"></div>
    </main>
    <footer>
        <p>&copy; 2025 Loja Online</p>
    </footer>
    <script src="script.js"></script>
</body>
</html>

// 6. Estilo (front-end/styles.css):
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}
header {
    background: #333;
    color: #fff;
    padding: 20px;
    text-align: center;
}
main {
    padding: 20px;
}
#product-list {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
}
.product {
    border: 1px solid #ddd;
    padding: 10px;
    width: 200px;
    text-align: center;
}
.product img {
    max-width: 100%;
    height: auto;
}
footer {
    background: #333;
    color: #fff;
    text-align: center;
    padding: 10px;
    position: fixed;
    bottom: 0;
    width: 100%;
}

// 7. Script para carregar produtos (front-end/script.js):
async function loadProducts() {
    try {
        const response = await fetch('http://localhost:3000/produtos');
        const products = await response.json();

        const productList = document.getElementById('product-list');
        productList.innerHTML = '';

        products.forEach(product => {
            const productDiv = document.createElement('div');
            productDiv.classList.add('product');
            productDiv.innerHTML = `
                <img src="placeholder.jpg" alt="${product.nome}">
                <h3>${product.nome}</h3>
                <p>R$ ${product.preco.toFixed(2)}</p>
                <button>Adicionar ao Carrinho</button>
            `;
            productList.appendChild(productDiv);
        });
    } catch (error) {
        console.error('Erro ao carregar produtos:', error);
    }
}

loadProducts();

// 8. Testando o projeto:
// - Inicie o servidor com: node back-end/server.js
// - Abra o arquivo front-end/index.html no navegador.
